// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: topo.proto

package topo

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Node_Type int32

const (
	Node_UNKNOWN Node_Type = 0
	Node_HOST    Node_Type = 1
	Node_BGPNODE Node_Type = 2
	Node_SUBTOPO Node_Type = 3
)

// Enum value maps for Node_Type.
var (
	Node_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "HOST",
		2: "BGPNODE",
		3: "SUBTOPO",
	}
	Node_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"HOST":    1,
		"BGPNODE": 2,
		"SUBTOPO": 3,
	}
)

func (x Node_Type) Enum() *Node_Type {
	p := new(Node_Type)
	*p = x
	return p
}

func (x Node_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Node_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_topo_proto_enumTypes[0].Descriptor()
}

func (Node_Type) Type() protoreflect.EnumType {
	return &file_topo_proto_enumTypes[0]
}

func (x Node_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Node_Type.Descriptor instead.
func (Node_Type) EnumDescriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{1, 0}
}

// Topology message defines what nodes and links will be created
// inside the mesh.
type Topology struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`   // Name of the topology - will be linked to the cluster name
	Nodes []*Node      `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"` // List of nodes in the topology
	Links []*Link      `protobuf:"bytes,3,rep,name=links,proto3" json:"links,omitempty"` // connections between Nodes.
	Ints  []*Interface `protobuf:"bytes,4,rep,name=ints,proto3" json:"ints,omitempty"`   //List of interface to be exported out of a topo, optional.
}

func (x *Topology) Reset() {
	*x = Topology{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topology) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topology) ProtoMessage() {}

func (x *Topology) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topology.ProtoReflect.Descriptor instead.
func (*Topology) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{0}
}

func (x *Topology) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Topology) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Topology) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Topology) GetInts() []*Interface {
	if x != nil {
		return x.Ints
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   Node_Type `protobuf:"varint,2,opt,name=type,proto3,enum=topo.Node_Type" json:"type,omitempty"`
	Path   *string   `protobuf:"bytes,3,opt,name=path,proto3,oneof" json:"path,omitempty"` //Path of subtopo's definition file.
	Config *Config   `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetType() Node_Type {
	if x != nil {
		return x.Type
	}
	return Node_UNKNOWN
}

func (x *Node) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *Node) GetConfig() *Config {
	if x != nil {
		return x.Config
	}
	return nil
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeA string `protobuf:"bytes,1,opt,name=node_a,json=nodeA,proto3" json:"node_a,omitempty"`
	IntA  string `protobuf:"bytes,2,opt,name=int_a,json=intA,proto3" json:"int_a,omitempty"`
	NodeB string `protobuf:"bytes,3,opt,name=node_b,json=nodeB,proto3" json:"node_b,omitempty"`
	IntB  string `protobuf:"bytes,4,opt,name=int_b,json=intB,proto3" json:"int_b,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{2}
}

func (x *Link) GetNodeA() string {
	if x != nil {
		return x.NodeA
	}
	return ""
}

func (x *Link) GetIntA() string {
	if x != nil {
		return x.IntA
	}
	return ""
}

func (x *Link) GetNodeB() string {
	if x != nil {
		return x.NodeB
	}
	return ""
}

func (x *Link) GetIntB() string {
	if x != nil {
		return x.IntB
	}
	return ""
}

// If this is a subtopo, interface message define how internal interfaces be exported.
type Interface struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node    string `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`                      //node name
	NodeInt string `protobuf:"bytes,2,opt,name=node_int,json=nodeInt,proto3" json:"node_int,omitempty"` //node int name
	Export  string `protobuf:"bytes,3,opt,name=export,proto3" json:"export,omitempty"`                  //export int name
}

func (x *Interface) Reset() {
	*x = Interface{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Interface) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Interface) ProtoMessage() {}

func (x *Interface) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Interface.ProtoReflect.Descriptor instead.
func (*Interface) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{3}
}

func (x *Interface) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *Interface) GetNodeInt() string {
	if x != nil {
		return x.NodeInt
	}
	return ""
}

func (x *Interface) GetExport() string {
	if x != nil {
		return x.Export
	}
	return ""
}

// Config is the k8s pod specific configuration for a node.
type Config struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command []string `protobuf:"bytes,1,rep,name=command,proto3" json:"command,omitempty"` // Command to pass into pod.
	Args    []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`       // Command args to pass into the pod.
	Image   string   `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`     // Docker image to use with pod.
	// Map of environment variables to pass into the pod.
	Env map[string]string `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Specific entry point command for accessing the pod.
	EntryCommand string `protobuf:"bytes,5,opt,name=entry_command,json=entryCommand,proto3" json:"entry_command,omitempty"`
	// Mount point for configuration inside the pod.
	ConfigPath string `protobuf:"bytes,6,opt,name=config_path,json=configPath,proto3" json:"config_path,omitempty"`
	// Default configuration file name for the pod.
	ConfigFile       string                    `protobuf:"bytes,7,opt,name=config_file,json=configFile,proto3" json:"config_file,omitempty"`
	Sleep            uint32                    `protobuf:"varint,8,opt,name=sleep,proto3" json:"sleep,omitempty"` // Sleeptime before starting the pod.
	File             string                    `protobuf:"bytes,9,opt,name=file,proto3" json:"file,omitempty"`    // File is always relative to the topology configuration file.
	Tasks            []*Task                   `protobuf:"bytes,12,rep,name=tasks,proto3" json:"tasks,omitempty"`
	ExtraImages      map[string]string         `protobuf:"bytes,13,rep,name=extra_images,json=extraImages,proto3" json:"extra_images,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ShareVolumes     []string                  `protobuf:"bytes,14,rep,name=share_volumes,json=shareVolumes,proto3" json:"share_volumes,omitempty"`
	ContainerVolumes map[string]*PublicVolumes `protobuf:"bytes,15,rep,name=container_volumes,json=containerVolumes,proto3" json:"container_volumes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Config) Reset() {
	*x = Config{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{4}
}

func (x *Config) GetCommand() []string {
	if x != nil {
		return x.Command
	}
	return nil
}

func (x *Config) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Config) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Config) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Config) GetEntryCommand() string {
	if x != nil {
		return x.EntryCommand
	}
	return ""
}

func (x *Config) GetConfigPath() string {
	if x != nil {
		return x.ConfigPath
	}
	return ""
}

func (x *Config) GetConfigFile() string {
	if x != nil {
		return x.ConfigFile
	}
	return ""
}

func (x *Config) GetSleep() uint32 {
	if x != nil {
		return x.Sleep
	}
	return 0
}

func (x *Config) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *Config) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Config) GetExtraImages() map[string]string {
	if x != nil {
		return x.ExtraImages
	}
	return nil
}

func (x *Config) GetShareVolumes() []string {
	if x != nil {
		return x.ShareVolumes
	}
	return nil
}

func (x *Config) GetContainerVolumes() map[string]*PublicVolumes {
	if x != nil {
		return x.ContainerVolumes
	}
	return nil
}

type PublicVolumes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Volumes []string `protobuf:"bytes,1,rep,name=volumes,proto3" json:"volumes,omitempty"`
	Paths   []string `protobuf:"bytes,2,rep,name=paths,proto3" json:"paths,omitempty"`
}

func (x *PublicVolumes) Reset() {
	*x = PublicVolumes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicVolumes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicVolumes) ProtoMessage() {}

func (x *PublicVolumes) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicVolumes.ProtoReflect.Descriptor instead.
func (*PublicVolumes) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{5}
}

func (x *PublicVolumes) GetVolumes() []string {
	if x != nil {
		return x.Volumes
	}
	return nil
}

func (x *PublicVolumes) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Container string   `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	Cmds      []string `protobuf:"bytes,2,rep,name=cmds,proto3" json:"cmds,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_topo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_topo_proto_rawDescGZIP(), []int{6}
}

func (x *Task) GetContainer() string {
	if x != nil {
		return x.Container
	}
	return ""
}

func (x *Task) GetCmds() []string {
	if x != nil {
		return x.Cmds
	}
	return nil
}

var File_topo_proto protoreflect.FileDescriptor

var file_topo_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x74, 0x6f,
	0x70, 0x6f, 0x22, 0x87, 0x01, 0x0a, 0x08, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xc0, 0x01, 0x0a,
	0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x37, 0x0a,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x4f, 0x53, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x47, 0x50, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x42,
	0x54, 0x4f, 0x50, 0x4f, 0x10, 0x03, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x5e, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x41, 0x12, 0x13,
	0x0a, 0x05, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6e, 0x74, 0x41, 0x12, 0x15, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x62, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x42, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x6e,
	0x74, 0x5f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x74, 0x42, 0x22,
	0x52, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65,
	0x78, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x22, 0xb2, 0x05, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x27, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x45, 0x6e,
	0x76, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x73, 0x6c, 0x65, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x74, 0x6f,
	0x70, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x40,
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x1a, 0x36, 0x0a, 0x08, 0x45, 0x6e, 0x76, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x3e,
	0x0a, 0x10, 0x45, 0x78, 0x74, 0x72, 0x61, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x58,
	0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x74, 0x6f, 0x70, 0x6f, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3f, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x22, 0x38, 0x0a, 0x04, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6d, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6d, 0x64, 0x73, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x70, 0x33, 0x72, 0x64, 0x79, 0x2f, 0x62, 0x67, 0x70, 0x65, 0x6d, 0x75, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x70, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_topo_proto_rawDescOnce sync.Once
	file_topo_proto_rawDescData = file_topo_proto_rawDesc
)

func file_topo_proto_rawDescGZIP() []byte {
	file_topo_proto_rawDescOnce.Do(func() {
		file_topo_proto_rawDescData = protoimpl.X.CompressGZIP(file_topo_proto_rawDescData)
	})
	return file_topo_proto_rawDescData
}

var file_topo_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_topo_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_topo_proto_goTypes = []interface{}{
	(Node_Type)(0),        // 0: topo.Node.Type
	(*Topology)(nil),      // 1: topo.Topology
	(*Node)(nil),          // 2: topo.Node
	(*Link)(nil),          // 3: topo.Link
	(*Interface)(nil),     // 4: topo.Interface
	(*Config)(nil),        // 5: topo.Config
	(*PublicVolumes)(nil), // 6: topo.PublicVolumes
	(*Task)(nil),          // 7: topo.Task
	nil,                   // 8: topo.Config.EnvEntry
	nil,                   // 9: topo.Config.ExtraImagesEntry
	nil,                   // 10: topo.Config.ContainerVolumesEntry
}
var file_topo_proto_depIdxs = []int32{
	2,  // 0: topo.Topology.nodes:type_name -> topo.Node
	3,  // 1: topo.Topology.links:type_name -> topo.Link
	4,  // 2: topo.Topology.ints:type_name -> topo.Interface
	0,  // 3: topo.Node.type:type_name -> topo.Node.Type
	5,  // 4: topo.Node.config:type_name -> topo.Config
	8,  // 5: topo.Config.env:type_name -> topo.Config.EnvEntry
	7,  // 6: topo.Config.tasks:type_name -> topo.Task
	9,  // 7: topo.Config.extra_images:type_name -> topo.Config.ExtraImagesEntry
	10, // 8: topo.Config.container_volumes:type_name -> topo.Config.ContainerVolumesEntry
	6,  // 9: topo.Config.ContainerVolumesEntry.value:type_name -> topo.PublicVolumes
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_topo_proto_init() }
func file_topo_proto_init() {
	if File_topo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_topo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topology); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Interface); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Config); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicVolumes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_topo_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_topo_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_topo_proto_goTypes,
		DependencyIndexes: file_topo_proto_depIdxs,
		EnumInfos:         file_topo_proto_enumTypes,
		MessageInfos:      file_topo_proto_msgTypes,
	}.Build()
	File_topo_proto = out.File
	file_topo_proto_rawDesc = nil
	file_topo_proto_goTypes = nil
	file_topo_proto_depIdxs = nil
}
